{# if maxItems was set by parent component, use it.  Otherwise set it to all. #}
{% set  maxItems = maxItems ? maxItems : leafletMap.markers|length %}

<div
  class="ma__leaflet-map"
  {{ leafletMap.static ? "" : 'aria-hidden="true" role="presentation"' }}>
  {# for static maps #}
  {% if leafletMap.static %}
  <div class="ma__leaflet-map__map static-image">
    <a href="{{ leafletMap.link.href }}">
      {% set picture = leafletMap.picture %}
      {% include "@atoms/09-media/picture-element.twig" %}
      <div class="ma__leaflet-maps__directions-link">
        <span>Get Directions<span class="ma__visually-hidden"> to {{ leafletMap.link.info }}</span>&nbsp;{{ icon('arrow') }}</span>
      </div>
    </a>
  </div>
  {% else %}
  {# for google maps #}
  <div class="ma__leaflet-map__map js-leaflet-map" id="mapid"></div>
  {# user editable data used in this specific map #}
  <script>
    // Make leafletMap data object available in google map module js.
    var ma = ma || {};
    ma.leafletMapData = ma.leafletMapData || [];
    ma.leafletMapData.push({ // why need to remap the data object?
      map: {
        center: {
          lat: {{leafletMap.map.center.lat}},
          lng: {{leafletMap.map.center.lng}}
        },
        zoom: {{leafletMap.map.zoom}}
      },
      maxItems: {{ maxItems }},
      markers: [
      {% for marker in leafletMap.markers %} 
        {
          position: {
            lat: {{marker.position.lat}},
            lng: {{marker.position.lng}}
          },
          label: "{{ marker.label }}", // single character only
          infoWindow: {
            name: "{{ marker.infoWindow.name|e('js') }}",
            link: "{{ marker.infoWindow.link|e('js') }}",
            phone: "{{ marker.infoWindow.phone|e('js') }}",
            fax: "{{ marker.infoWindow.fax|e('js') }}",
            email: "{{ marker.infoWindow.email|e('js') }}",
            address: "{{ marker.infoWindow.address|replace({'\n': '<br>'})|e('js') }}",
            directions: "{{ marker.infoWindow.directions|e('js') }}"
          }
        }{{ loop.last ? '' : ',' }}
      {% endfor %}
      ]
    });
  </script>
  {% endif %}
</div>
